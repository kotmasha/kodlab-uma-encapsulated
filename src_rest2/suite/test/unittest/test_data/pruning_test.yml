create agent:
  method: POST
  url: /UMA/object/agent
  status_code: 201
  data:
    agent_id: test_agent

create snapshot:
  method: POST
  url: /UMA/object/snapshot
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot

create sensor0:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor0
    c_sid: c_sensor0

create sensor1:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor1
    c_sid: c_sensor1

create sensor2:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor2
    c_sid: c_sensor2

create sensor3:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor3
    c_sid: c_sensor3

amper 1&6 without stabilize:
  method: POST
  url: /UMA/simulation/amper
  status_code: 403
  message: This snapshot data is not stabilized, abort operation
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    amper_list: [[False, True, False, False, False, False, True, False]]
    uuid_list: [['sensor4', 'c_sensor4']]

delay 0 without stabilize:
  method: POST
  url: /UMA/simulation/delay
  status_code: 403
  message: This snapshot data is not stabilized, abort operation
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, False, False, False, False, False, False]]
    uuid_list: [['sensor4', 'c_sensor4']]

pruning 0 without stabilize:
  method: POST
  url: /UMA/simulation/pruning
  status_code: 403
  message: This snapshot data is not stabilized, abort operation
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    signals: [True, True, False, False, False, False, False, False]

init snapshot:
  method: POST
  url: /UMA/object/snapshot/init
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    initial_sensor_size: 4

amper 1&6:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, False, False, False, False, False, False]]
    uuid_list: [['sensor4', 'c_sensor4']]

delay 0&8:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, False, False, False, False, False, False, True, False]]
    uuid_list: [['sensor5', 'c_sensor5']]


get snapshot 6 sensor:
  method: GET
  url: /UMA/object/snapshot
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    sensors:
      - sensor: {'m': 'sensor0', 'cm': 'c_sensor0'}
      - sensor: {'m': 'sensor1', 'cm': 'c_sensor1'}
      - sensor: {'m': 'sensor2', 'cm': 'c_sensor2'}
      - sensor: {'m': 'sensor3', 'cm': 'c_sensor3'}
      - sensor: {'m': 'sensor4', 'cm': 'c_sensor4'}
      - sensor: {'m': 'sensor5', 'cm': 'c_sensor5'}
    sizes:
      sensor_count: 6
      sensor_pair_count: 21
      _sensor_size: 6
      _sensor_size_max: 6
      _sensor2d_size: 21
      _sensor2d_size_max: 21
      _measurable_size: 12
      _measurable_size_max: 12
      _measurable2d_size: 78
      _measurable2d_size_max: 78
      _mask_amper_size: 42
      _mask_amper_size_max: 42
    q: 0.9
    threshold: 0.125
    auto_target: False
    propagate_mask: False

pruning 4 5:
  method: POST
  url: /UMA/simulation/pruning
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    signals: [False, False, False, False, False, False, False, False, True, True, True, True]

get snapshot 4 sensor:
  method: GET
  url: /UMA/object/snapshot
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    sensors:
      - sensor: {'m': 'sensor0', 'cm': 'c_sensor0'}
      - sensor: {'m': 'sensor1', 'cm': 'c_sensor1'}
      - sensor: {'m': 'sensor2', 'cm': 'c_sensor2'}
      - sensor: {'m': 'sensor3', 'cm': 'c_sensor3'}
    sizes:
      sensor_count: 4
      sensor_pair_count: 10
      _sensor_size: 4
      _sensor_size_max: 6
      _sensor2d_size: 10
      _sensor2d_size_max: 21
      _measurable_size: 8
      _measurable_size_max: 12
      _measurable2d_size: 36
      _measurable2d_size_max: 78
      _mask_amper_size: 20
      _mask_amper_size_max: 42
    q: 0.9
    threshold: 0.125
    auto_target: False
    propagate_mask: False

amper 1&3&6:
  method: POST
  url: /UMA/simulation/amper
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    amper_list: [[False, True, False, True, False, False, True, False, False, False, False, False]]
    uuid_list: [['sensor6', 'c_sensor6']]


get snapshot 7 sensor:
  method: GET
  url: /UMA/object/snapshot
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    sensors:
      - sensor: {'m': 'sensor0', 'cm': 'c_sensor0'}
      - sensor: {'m': 'sensor1', 'cm': 'c_sensor1'}
      - sensor: {'m': 'sensor2', 'cm': 'c_sensor2'}
      - sensor: {'m': 'sensor3', 'cm': 'c_sensor3'}
      - sensor: {'m': 'sensor4', 'cm': 'c_sensor4'}
      - sensor: {'m': 'sensor5', 'cm': 'c_sensor5'}
      - sensor: {'m': 'sensor6', 'cm': 'c_sensor6'}
    sizes:
      sensor_count: 7
      sensor_pair_count: 28
      _sensor_size: 7
      _sensor_size_max: 10
      _sensor2d_size: 28
      _sensor2d_size_max: 55
      _measurable_size: 14
      _measurable_size_max: 20
      _measurable2d_size: 105
      _measurable2d_size_max: 210
      _mask_amper_size: 56
      _mask_amper_size_max: 110
    q: 0.9
    threshold: 0.125
    auto_target: False
    propagate_mask: False

pruning 0 2 3 4 6:
  method: POST
  url: /UMA/simulation/pruning
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    signals: [True, True, False, False, True, True, True, True, True, True, False, False, True, True]

get snapshot 2 sensor:
  method: GET
  url: /UMA/object/snapshot
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    sensors:
      - sensor: {'m': 'sensor1', 'cm': 'c_sensor1'}
      - sensor: {'m': 'sensor5', 'cm': 'c_sensor5'}
    sizes:
      sensor_count: 2
      sensor_pair_count: 3
      _sensor_size: 2
      _sensor_size_max: 10
      _sensor2d_size: 3
      _sensor2d_size_max: 55
      _measurable_size: 4
      _measurable_size_max: 20
      _measurable2d_size: 10
      _measurable2d_size_max: 210
      _mask_amper_size: 6
      _mask_amper_size_max: 110
    q: 0.9
    threshold: 0.125
    auto_target: False
    propagate_mask: False

delete agent:
  method: DELETE
  url: /UMA/object/agent
  status_code: 200
  data:
    agent_id: test_agent

tests:
  - create agent
  - create snapshot
  - create sensor0
  - create sensor1
  - create sensor2
  - create sensor3
  - amper 1&6 without stabilize
  - delay 0 without stabilize
  - pruning 0 without stabilize
  - init snapshot
  - amper 1&6
  - delay 0&8
  - get snapshot 6 sensor
  - pruning 4 5
  - get snapshot 4 sensor
  - amper 1&6
  - delay 0&8
  - amper 1&3&6
  - get snapshot 7 sensor
  - pruning 0 2 3 4 6
  - get snapshot 2 sensor
  - delete agent
