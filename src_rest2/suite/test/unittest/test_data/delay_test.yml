create agent:
  method: POST
  url: /UMA/object/agent
  status_code: 201
  data:
    agent_id: test_agent

create snapshot:
  method: POST
  url: /UMA/object/snapshot
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot

create sensor0:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor0
    c_sid: c_sensor0

create sensor1:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor1
    c_sid: c_sensor1

create sensor2:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor2
    c_sid: c_sensor2

create sensor3:
  method: POST
  url: /UMA/object/sensor
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensor3
    c_sid: c_sensor3

update measurable sensor0:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: sensor0
  data:
    diag: 0.2

update measurable c_sensor0:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: c_sensor0
  data:
    diag: 0.8

update measurable sensor1:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: sensor1
  data:
    diag: 0.4

update measurable c_sensor1:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: c_sensor1
  data:
    diag: 0.6

update measurable sensor2:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: sensor2
  data:
    diag: 0.6

update measurable c_sensor2:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: c_sensor2
  data:
    diag: 0.4

update measurable sensor3:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: sensor3
  data:
    diag: 0.8

update measurable c_sensor3:
  method: PUT
  url: /UMA/object/measurable
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable_id: c_sensor3
  data:
    diag: 0.2


update measurable pair sensor0 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor0
    measurable2: sensor0
  data:
    w: 0.2

update measurable pair c_sensor0 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor0
    measurable2: sensor0
  data:
    w: 0.0

update measurable pair c_sensor0 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor0
    measurable2: c_sensor0
  data:
    w: 0.8

update measurable pair sensor1 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor1
    measurable2: sensor0
  data:
    w: 0.2

update measurable pair sensor1 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor1
    measurable2: c_sensor0
  data:
    w: 0.2

update measurable pair sensor1 sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor1
    measurable2: sensor1
  data:
    w: 0.4

update measurable pair c_sensor1 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor1
    measurable2: sensor0
  data:
    w: 0.0

update measurable pair c_sensor1 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor1
    measurable2: c_sensor0
  data:
    w: 0.6

update measurable pair c_sensor1 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor1
    measurable2: sensor0
  data:
    w: 0.0

update measurable pair c_sensor1 c_sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor1
    measurable2: c_sensor1
  data:
    w: 0.6

update measurable pair sensor2 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor2
    measurable2: sensor0
  data:
    w: 0.2

update measurable pair sensor2 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor2
    measurable2: c_sensor0
  data:
    w: 0.4

update measurable pair sensor2 sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor2
    measurable2: sensor1
  data:
    w: 0.4

update measurable pair sensor2 c_sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor2
    measurable2: c_sensor1
  data:
    w: 0.2

update measurable pair sensor2 sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor2
    measurable2: sensor2
  data:
    w: 0.6

update measurable pair c_sensor2 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor2
    measurable2: sensor0
  data:
    w: 0.0

update measurable pair c_sensor2 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor2
    measurable2: c_sensor0
  data:
    w: 0.4

update measurable pair c_sensor2 sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor2
    measurable2: sensor1
  data:
    w: 0.0

update measurable pair c_sensor2 c_sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor2
    measurable2: c_sensor1
  data:
    w: 0.4

update measurable pair c_sensor2 sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor2
    measurable2: sensor2
  data:
    w: 0.0

update measurable pair c_sensor2 c_sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor2
    measurable2: c_sensor2
  data:
    w: 0.4

update measurable pair sensor3 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: sensor0
  data:
    w: 0.2

update measurable pair sensor3 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: c_sensor0
  data:
    w: 0.6

update measurable pair sensor3 sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: sensor1
  data:
    w: 0.4

update measurable pair sensor3 c_sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: c_sensor1
  data:
    w: 0.4

update measurable pair sensor3 sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: sensor2
  data:
    w: 0.6

update measurable pair sensor3 c_sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: c_sensor2
  data:
    w: 0.2

update measurable pair sensor3 sensor3:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensor3
    measurable2: sensor3
  data:
    w: 0.8

update measurable pair c_sensor3 sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: sensor0
  data:
    w: 0.0

update measurable pair c_sensor3 c_sensor0:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: c_sensor0
  data:
    w: 0.2

update measurable pair c_sensor3 sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: sensor1
  data:
    w: 0.0

update measurable pair c_sensor3 c_sensor1:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: c_sensor1
  data:
    w: 0.2

update measurable pair c_sensor3 sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: sensor2
  data:
    w: 0.0

update measurable pair c_sensor3 c_sensor2:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: c_sensor2
  data:
    w: 0.2

update measurable pair c_sensor3 sensor3:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: sensor3
  data:
    w: 0.0

update measurable pair c_sensor3 c_sensor3:
  method: PUT
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensor3
    measurable2: c_sensor3
  data:
    w: 0.2

init snapshot:
  method: POST
  url: /UMA/object/snapshot/init
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    initial_sensor_size: 4

#0, 0=true
set signal 0:
  method: PUT
  url: /UMA/data/signals
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
  data:
    signals: [True, False, False, False, False, False, False, False]

delay 0, 0=true:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, False, False, False, False, False, False]]
    uuid_list: [['sensorX', 'c_sensorX']]

get meaurable pair X 0 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor0
  kwargs:
    w: 0.2

get meaurable pair X 1 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.8

get meaurable pair X 2 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor1
  kwargs:
    w: 0.4

get meaurable pair X 3 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.6

get meaurable pair X 4 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor2
  kwargs:
    w: 0.6

get meaurable pair X 5 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.4

get meaurable pair X 6 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor3
  kwargs:
    w: 0.8

get meaurable pair X 7 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.2

get meaurable pair X 8 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensorX
  kwargs:
    w: 1.0

get meaurable pair CX 0 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor0
  kwargs:
    w: 0.0

get meaurable pair CX 1 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.0

get meaurable pair CX 2 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor1
  kwargs:
    w: 0.0

get meaurable pair CX 3 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.0

get meaurable pair CX 4 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor2
  kwargs:
    w: 0.0

get meaurable pair CX 5 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.0

get meaurable pair CX 6 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor3
  kwargs:
    w: 0.0

get meaurable pair CX 7 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.0

get meaurable pair CX 8 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 9 after delay0, 0=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensorX
  kwargs:
    w: 0.0

get sensorX 0:
  method: GET
  url: /UMA/object/sensor
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    amper_list_idx: [0]
    amper_list_ids: [sensor0]
    amper_list: [True, False, False, False, False, False, False, False, False, False]
    idx: 4

get snapshot 5 sensor:
  method: GET
  url: /UMA/object/snapshot
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    sensors:
      - sensor: {'m': 'sensor0', 'cm': 'c_sensor0'}
      - sensor: {'m': 'sensor1', 'cm': 'c_sensor1'}
      - sensor: {'m': 'sensor2', 'cm': 'c_sensor2'}
      - sensor: {'m': 'sensor3', 'cm': 'c_sensor3'}
      - sensor: {'m': 'sensorX', 'cm': 'c_sensorX'}
    sizes:
      sensor_count: 5
      sensor_pair_count: 15
      _sensor_size: 5
      _sensor_size_max: 6
      _sensor2d_size: 15
      _sensor2d_size_max: 21
      _measurable_size: 10
      _measurable_size_max: 12
      _measurable2d_size: 55
      _measurable2d_size_max: 78
      _mask_amper_size: 30
      _mask_amper_size_max: 42
    q: 0.9
    threshold: 0.125
    auto_target: False

pruning X:
  method: POST
  url: /UMA/simulation/pruning
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    signals: [False, False, False, False, False, False, False, False, True, True]

get snapshot 4 sensor:
  method: GET
  url: /UMA/object/snapshot
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    sensors:
      - sensor: {'m': 'sensor0', 'cm': 'c_sensor0'}
      - sensor: {'m': 'sensor1', 'cm': 'c_sensor1'}
      - sensor: {'m': 'sensor2', 'cm': 'c_sensor2'}
      - sensor: {'m': 'sensor3', 'cm': 'c_sensor3'}
    sizes:
      sensor_count: 4
      sensor_pair_count: 10
      _sensor_size: 4
      _sensor_size_max: 6
      _sensor2d_size: 10
      _sensor2d_size_max: 21
      _measurable_size: 8
      _measurable_size_max: 12
      _measurable2d_size: 36
      _measurable2d_size_max: 78
      _mask_amper_size: 20
      _mask_amper_size_max: 42
    q: 0.9
    threshold: 0.125
    auto_target: False

#0, 0=false
set signal 1:
  method: PUT
  url: /UMA/data/signals
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
  data:
    signals: [False, True, False, False, False, False, False, False]

delay 0, 0=false:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, False, False, False, False, False, False]]
    uuid_list: [['sensorX', 'c_sensorX']]

get meaurable pair X 0 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor0
  kwargs:
    w: 0.0

get meaurable pair X 1 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.0

get meaurable pair X 2 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor1
  kwargs:
    w: 0.0

get meaurable pair X 3 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.0

get meaurable pair X 4 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor2
  kwargs:
    w: 0.0

get meaurable pair X 5 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.0

get meaurable pair X 6 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor3
  kwargs:
    w: 0.0

get meaurable pair X 7 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.0

get meaurable pair X 8 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 0 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor0
  kwargs:
    w: 0.2

get meaurable pair CX 1 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.8

get meaurable pair CX 2 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor1
  kwargs:
    w: 0.4

get meaurable pair CX 3 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.6

get meaurable pair CX 4 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor2
  kwargs:
    w: 0.6

get meaurable pair CX 5 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.4

get meaurable pair CX 6 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor3
  kwargs:
    w: 0.8

get meaurable pair CX 7 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.2

get meaurable pair CX 8 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 9 after delay0, 0=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensorX
  kwargs:
    w: 1.0

#7, 7=true
set signal 7:
  method: PUT
  url: /UMA/data/signals
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
  data:
    signals: [False, False, False, False, False, False, False, True]

delay 7, 7=true:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[False, False, False, False, False, False, False, True]]
    uuid_list: [['sensorX', 'c_sensorX']]

get meaurable pair X 0 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor0
  kwargs:
    w: 0.2

get meaurable pair X 1 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.8

get meaurable pair X 2 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor1
  kwargs:
    w: 0.4

get meaurable pair X 3 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.6

get meaurable pair X 4 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor2
  kwargs:
    w: 0.6

get meaurable pair X 5 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.4

get meaurable pair X 6 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor3
  kwargs:
    w: 0.8

get meaurable pair X 7 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.2

get meaurable pair X 8 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensorX
  kwargs:
    w: 1.0

get meaurable pair CX 0 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor0
  kwargs:
    w: 0.0

get meaurable pair CX 1 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.0

get meaurable pair CX 2 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor1
  kwargs:
    w: 0.0

get meaurable pair CX 3 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.0

get meaurable pair CX 4 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor2
  kwargs:
    w: 0.0

get meaurable pair CX 5 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.0

get meaurable pair CX 6 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor3
  kwargs:
    w: 0.0

get meaurable pair CX 7 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.0

get meaurable pair CX 8 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 9 after delay7, 7=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensorX
  kwargs:
    w: 0.0

get sensorX 7:
  method: GET
  url: /UMA/object/sensor
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    amper_list_idx: [7]
    amper_list_ids: [c_sensor3]
    amper_list: [False, False, False, False, False, False, False, True, False, False]
    idx: 4

#7, 7=false
set signal 6:
  method: PUT
  url: /UMA/data/signals
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
  data:
    signals: [False, False, False, False, False, False, True, False]

delay 7, 7=false:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[False, False, False, False, False, False, False, True]]
    uuid_list: [['sensorX', 'c_sensorX']]

get meaurable pair X 0 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor0
  kwargs:
    w: 0.0

get meaurable pair X 1 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.0

get meaurable pair X 2 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor1
  kwargs:
    w: 0.0

get meaurable pair X 3 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.0

get meaurable pair X 4 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor2
  kwargs:
    w: 0.0

get meaurable pair X 5 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.0

get meaurable pair X 6 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor3
  kwargs:
    w: 0.0

get meaurable pair X 7 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.0

get meaurable pair X 8 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 0 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor0
  kwargs:
    w: 0.2

get meaurable pair CX 1 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.8

get meaurable pair CX 2 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor1
  kwargs:
    w: 0.4

get meaurable pair CX 3 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.6

get meaurable pair CX 4 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor2
  kwargs:
    w: 0.6

get meaurable pair CX 5 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.4

get meaurable pair CX 6 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor3
  kwargs:
    w: 0.8

get meaurable pair CX 7 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.2

get meaurable pair CX 8 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 9 after delay7, 7=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensorX
  kwargs:
    w: 1.0

#0&2&4
#0&2&4=true
set signal 0&2&4:
  method: PUT
  url: /UMA/data/signals
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
  data:
    signals: [True, False, True, False, True, False, False, False]

delay 0&2&4, 0&2&4=true:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, True, False, True, False, False, False]]
    uuid_list: [['sensorX', 'c_sensorX']]

get meaurable pair X 0 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor0
  kwargs:
    w: 0.2

get meaurable pair X 1 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.8

get meaurable pair X 2 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor1
  kwargs:
    w: 0.4

get meaurable pair X 3 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.6

get meaurable pair X 4 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor2
  kwargs:
    w: 0.6

get meaurable pair X 5 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.4

get meaurable pair X 6 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor3
  kwargs:
    w: 0.8

get meaurable pair X 7 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.2

get meaurable pair X 8 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensorX
  kwargs:
    w: 1.0

get meaurable pair CX 0 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor0
  kwargs:
    w: 0.0

get meaurable pair CX 1 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.0

get meaurable pair CX 2 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor1
  kwargs:
    w: 0.0

get meaurable pair CX 3 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.0

get meaurable pair CX 4 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor2
  kwargs:
    w: 0.0

get meaurable pair CX 5 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.0

get meaurable pair CX 6 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor3
  kwargs:
    w: 0.0

get meaurable pair CX 7 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.0

get meaurable pair CX 8 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 9 after delay0&2&4, 0&2&4=true:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensorX
  kwargs:
    w: 0.0

get sensorX 0&2&4:
  method: GET
  url: /UMA/object/sensor
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    sensor_id: sensorX
  kwargs:
    amper_list_idx: [0, 2, 4]
    amper_list_ids: [sensor0, sensor1, sensor2]
    amper_list: [True, False, True, False, True, False, False, False, False, False]
    idx: 4

#0&2&4, 0&2&4=false
set signal 0&2&5:
  method: PUT
  url: /UMA/data/signals
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
  data:
    signals: [True, False, True, False, False, True, False, False]

delay 0&2&4, 0&2&4=false:
  method: POST
  url: /UMA/simulation/delay
  status_code: 201
  data:
    agent_id: test_agent
    snapshot_id: test_snapshot
    delay_list: [[True, False, True, False, True, False, False, False]]
    uuid_list: [['sensorX', 'c_sensorX']]

get meaurable pair X 0 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor0
  kwargs:
    w: 0.0

get meaurable pair X 1 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.0

get meaurable pair X 2 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor1
  kwargs:
    w: 0.0

get meaurable pair X 3 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.0

get meaurable pair X 4 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor2
  kwargs:
    w: 0.0

get meaurable pair X 5 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.0

get meaurable pair X 6 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensor3
  kwargs:
    w: 0.0

get meaurable pair X 7 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.0

get meaurable pair X 8 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 0 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor0
  kwargs:
    w: 0.2

get meaurable pair CX 1 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor0
  kwargs:
    w: 0.8

get meaurable pair CX 2 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor1
  kwargs:
    w: 0.4

get meaurable pair CX 3 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor1
  kwargs:
    w: 0.6

get meaurable pair CX 4 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor2
  kwargs:
    w: 0.6

get meaurable pair CX 5 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor2
  kwargs:
    w: 0.4

get meaurable pair CX 6 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensor3
  kwargs:
    w: 0.8

get meaurable pair CX 7 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensor3
  kwargs:
    w: 0.2

get meaurable pair CX 8 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: sensorX
  kwargs:
    w: 0.0

get meaurable pair CX 9 after delay0&2&4, 0&2&4=false:
  method: GET
  url: /UMA/object/measurable_pair
  status_code: 200
  query:
    agent_id: test_agent
    snapshot_id: test_snapshot
    measurable1: c_sensorX
    measurable2: c_sensorX
  kwargs:
    w: 1.0

delete agent:
  method: DELETE
  url: /UMA/object/agent
  status_code: 200
  data:
    agent_id: test_agent

tests:
  - create agent
  - create snapshot
  - create sensor0
  - create sensor1
  - create sensor2
  - create sensor3
  - update measurable sensor0
  - update measurable c_sensor0
  - update measurable sensor1
  - update measurable c_sensor1
  - update measurable sensor2
  - update measurable c_sensor2
  - update measurable sensor3
  - update measurable c_sensor3
  - update measurable pair sensor0 sensor0
  - update measurable pair c_sensor0 sensor0
  - update measurable pair c_sensor0 c_sensor0
  - update measurable pair sensor1 sensor0
  - update measurable pair sensor1 c_sensor0
  - update measurable pair sensor1 sensor1
  - update measurable pair c_sensor1 sensor0
  - update measurable pair c_sensor1 c_sensor0
  - update measurable pair c_sensor1 sensor0
  - update measurable pair c_sensor1 c_sensor1
  - update measurable pair sensor2 sensor0
  - update measurable pair sensor2 c_sensor0
  - update measurable pair sensor2 sensor1
  - update measurable pair sensor2 c_sensor1
  - update measurable pair sensor2 sensor2
  - update measurable pair c_sensor2 sensor0
  - update measurable pair c_sensor2 c_sensor0
  - update measurable pair c_sensor2 sensor1
  - update measurable pair c_sensor2 c_sensor1
  - update measurable pair c_sensor2 sensor2
  - update measurable pair c_sensor2 c_sensor2
  - update measurable pair sensor3 sensor0
  - update measurable pair sensor3 c_sensor0
  - update measurable pair sensor3 sensor1
  - update measurable pair sensor3 c_sensor1
  - update measurable pair sensor3 sensor2
  - update measurable pair sensor3 c_sensor2
  - update measurable pair sensor3 sensor3
  - update measurable pair c_sensor3 sensor0
  - update measurable pair c_sensor3 c_sensor0
  - update measurable pair c_sensor3 sensor1
  - update measurable pair c_sensor3 c_sensor1
  - update measurable pair c_sensor3 sensor2
  - update measurable pair c_sensor3 c_sensor2
  - update measurable pair c_sensor3 sensor3
  - update measurable pair c_sensor3 c_sensor3
  - init snapshot
#0, 0=true
  - set signal 0
  - set signal 0
  - delay 0, 0=true
  - get meaurable pair X 0 after delay0, 0=true
  - get meaurable pair X 1 after delay0, 0=true
  - get meaurable pair X 2 after delay0, 0=true
  - get meaurable pair X 3 after delay0, 0=true
  - get meaurable pair X 4 after delay0, 0=true
  - get meaurable pair X 5 after delay0, 0=true
  - get meaurable pair X 6 after delay0, 0=true
  - get meaurable pair X 7 after delay0, 0=true
  - get meaurable pair X 8 after delay0, 0=true
  - get meaurable pair CX 0 after delay0, 0=true
  - get meaurable pair CX 1 after delay0, 0=true
  - get meaurable pair CX 2 after delay0, 0=true
  - get meaurable pair CX 3 after delay0, 0=true
  - get meaurable pair CX 4 after delay0, 0=true
  - get meaurable pair CX 5 after delay0, 0=true
  - get meaurable pair CX 6 after delay0, 0=true
  - get meaurable pair CX 7 after delay0, 0=true
  - get meaurable pair CX 8 after delay0, 0=true
  - get meaurable pair CX 9 after delay0, 0=true
  - get sensorX 0
  - get snapshot 5 sensor
  - pruning X
  - get snapshot 4 sensor
#0, 0=false
  - set signal 1
  - set signal 1
  - delay 0, 0=false
  - get meaurable pair X 0 after delay0, 0=false
  - get meaurable pair X 1 after delay0, 0=false
  - get meaurable pair X 2 after delay0, 0=false
  - get meaurable pair X 3 after delay0, 0=false
  - get meaurable pair X 4 after delay0, 0=false
  - get meaurable pair X 5 after delay0, 0=false
  - get meaurable pair X 6 after delay0, 0=false
  - get meaurable pair X 7 after delay0, 0=false
  - get meaurable pair X 8 after delay0, 0=false
  - get meaurable pair CX 0 after delay0, 0=false
  - get meaurable pair CX 1 after delay0, 0=false
  - get meaurable pair CX 2 after delay0, 0=false
  - get meaurable pair CX 3 after delay0, 0=false
  - get meaurable pair CX 4 after delay0, 0=false
  - get meaurable pair CX 5 after delay0, 0=false
  - get meaurable pair CX 6 after delay0, 0=false
  - get meaurable pair CX 7 after delay0, 0=false
  - get meaurable pair CX 8 after delay0, 0=false
  - get meaurable pair CX 9 after delay0, 0=false
  - get sensorX 0
  - get snapshot 5 sensor
  - pruning X
  - get snapshot 4 sensor
#7, 7=true
  - set signal 7
  - set signal 7
  - delay 7, 7=true
  - get meaurable pair X 0 after delay7, 7=true
  - get meaurable pair X 1 after delay7, 7=true
  - get meaurable pair X 2 after delay7, 7=true
  - get meaurable pair X 3 after delay7, 7=true
  - get meaurable pair X 4 after delay7, 7=true
  - get meaurable pair X 5 after delay7, 7=true
  - get meaurable pair X 6 after delay7, 7=true
  - get meaurable pair X 7 after delay7, 7=true
  - get meaurable pair X 8 after delay7, 7=true
  - get meaurable pair CX 0 after delay7, 7=true
  - get meaurable pair CX 1 after delay7, 7=true
  - get meaurable pair CX 2 after delay7, 7=true
  - get meaurable pair CX 3 after delay7, 7=true
  - get meaurable pair CX 4 after delay7, 7=true
  - get meaurable pair CX 5 after delay7, 7=true
  - get meaurable pair CX 6 after delay7, 7=true
  - get meaurable pair CX 7 after delay7, 7=true
  - get meaurable pair CX 8 after delay7, 7=true
  - get meaurable pair CX 9 after delay7, 7=true
  - get sensorX 7
  - get snapshot 5 sensor
  - pruning X
  - get snapshot 4 sensor
#7, 7=false
  - set signal 6
  - set signal 6
  - delay 7, 7=false
  - get meaurable pair X 0 after delay7, 7=false
  - get meaurable pair X 1 after delay7, 7=false
  - get meaurable pair X 2 after delay7, 7=false
  - get meaurable pair X 3 after delay7, 7=false
  - get meaurable pair X 4 after delay7, 7=false
  - get meaurable pair X 5 after delay7, 7=false
  - get meaurable pair X 6 after delay7, 7=false
  - get meaurable pair X 7 after delay7, 7=false
  - get meaurable pair X 8 after delay7, 7=false
  - get meaurable pair CX 0 after delay7, 7=false
  - get meaurable pair CX 1 after delay7, 7=false
  - get meaurable pair CX 2 after delay7, 7=false
  - get meaurable pair CX 3 after delay7, 7=false
  - get meaurable pair CX 4 after delay7, 7=false
  - get meaurable pair CX 5 after delay7, 7=false
  - get meaurable pair CX 6 after delay7, 7=false
  - get meaurable pair CX 7 after delay7, 7=false
  - get meaurable pair CX 8 after delay7, 7=false
  - get meaurable pair CX 9 after delay7, 7=false
  - get sensorX 7
  - get snapshot 5 sensor
  - pruning X
  - get snapshot 4 sensor
#0&2&4
#0&2&4=true
  - set signal 0&2&4
  - set signal 0&2&4
  - delay 0&2&4, 0&2&4=true
  - get meaurable pair X 0 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 1 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 2 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 3 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 4 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 5 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 6 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 7 after delay0&2&4, 0&2&4=true
  - get meaurable pair X 8 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 0 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 1 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 2 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 3 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 4 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 5 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 6 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 7 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 8 after delay0&2&4, 0&2&4=true
  - get meaurable pair CX 9 after delay0&2&4, 0&2&4=true
  - get sensorX 0&2&4
  - get snapshot 5 sensor
  - pruning X
  - get snapshot 4 sensor
#0&2&4, 0&2&4=false
  - set signal 0&2&5
  - set signal 0&2&5
  - delay 0&2&4, 0&2&4=false
  - get meaurable pair X 0 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 1 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 2 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 3 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 4 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 5 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 6 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 7 after delay0&2&4, 0&2&4=false
  - get meaurable pair X 8 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 0 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 1 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 2 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 3 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 4 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 5 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 6 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 7 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 8 after delay0&2&4, 0&2&4=false
  - get meaurable pair CX 0 after delay0&2&4, 0&2&4=false
  - get sensorX 0&2&4
  - get snapshot 5 sensor
  - pruning X
  - get snapshot 4 sensor
  - delete agent